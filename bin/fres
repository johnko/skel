#!/bin/sh

# exit if running already
THISSCRIPT=${0##*/}
if pgrep -lf ${THISSCRIPT} | grep -v fresh | grep ${THISSCRIPT} > /dev/null 2> /dev/null ; then
    exit 1
fi

MYUID=`id -u`

if [ "x" == "x${REPOSRC}" ]; then
    REPOSRC=https://github.com/johnko
fi

MYPREFIX=$1
if [ "x" = "x$MYPREFIX" ]; then
    MYPREFIX=/usr/local
fi

######################################################################
# Functions
######################################################################

install_ssh_auth_keys() {
    prefix=$1
    if [ -z "$prefix" ]; then
        prefix=$HOME
    fi
    install -d -m 700 ${prefix}/.ssh
    chmod 700 ${prefix}/.ssh
    cat >${prefix}/.ssh/authorized_keys <<EOF
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDY+s7s+bs27WQV0gWZzwiRSZxALgnTBxtqb1ed39sZGzxcO0s1v9KoGtRaaisSIkMP+WSgzE1DIYBoW2FUGiD+lQXNlQSiIzw7oQCbR+EMuHO6+LW93hjix3c1rbrnhJfQST7Mwi/GfoFefxyW77/CO2Xkh2OkruNPUoBAXv/CvujF1ZXdL8D0tViXfpp/18tYx5feuLQMtq9Oi6A4N0021ICfAmUtGcpkQ8STldeVFxgBuVI3xtLmPqc8v45kB5EcNh9hvtaPznpKQCwQ6NTAv4NXRSVhApCKU1uY+TCNiHmnNwSnZ/PgKFmYlsh9vJr0CZbX6wbB++9Uwh3j51Xd dip
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAl3uvO5V7cNASk+LwvJKocl0vH3EB04eiICsd3NWWKl j@xeon.local
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIF/Td7/G/JDYtI6VkSf1L7/djZ4CvEW89RNtHwXMSQjr j@mbpr.local
EOF
    chmod 600 ${prefix}/.ssh/authorized_keys
}

install_resolv_overwrite() {
    resolvfile=/etc/resolv.conf
    if sysctl security.jail.jailed | grep 0 >/dev/null 2>&1; then
        if [ -e /boot/../mfsroot ]; then
            resolvfile=/boot/resolv.conf.overwrite
        fi
    fi
    if [ ! -e ${resolvfile} ]; then
        cat >${resolvfile} <<EOF
nameserver 8.8.8.8
nameserver 8.8.4.4
EOF
    fi
}

install_hosts_overwrite() {
    if sysctl security.jail.jailed | grep 0 >/dev/null 2>&1; then
        if [ ! -e /boot/hosts.overwrite ] && [ -e /boot/../mfsroot ]; then
            cat >/boot/hosts.overwrite <<EOF
::1 localhost localhost.my.domain
127.0.0.1 localhost localhost.my.domain
EOF
        fi
    fi
}

install_hosts_append() {
    if sysctl security.jail.jailed | grep 0 >/dev/null 2>&1; then
        if [ ! -e /boot/hosts.append ] && [ -e /boot/../mfsroot ]; then
            echo >/boot/hosts.append
        fi
    fi
}

git_deploy() {
    repo=$1
    [ -z "$repo" ] && exit 1
    if [ ! -d ~/git/${repo} ]; then
        git clone --depth 1 ${REPOSRC}/${repo} ~/git/${repo}
    else
        cd ~/git/${repo}
        git pull | grep -v 'Already up-to-date.'
        cd -
    fi
    install -d -m 755 ${MYPREFIX}/bin
    if [ -d ~/git/${repo}/bin ]; then
        for i in ~/git/${repo}/bin/* ; do
            install -C -m 755 ${i} ${MYPREFIX}/bin/
        done
    fi
}

pkg_bootstrap() {
    if [ ! -f /sbin/pkg-static ]; then
        if [ -e /usr/local/sbin/pkg-static ]; then
            env ASSUME_ALWAYS_YES=YES pkg bootstrap
        fi
        # test again after bootstrap
        if [ -e /usr/local/sbin/pkg-static ]; then
            install -C -m 755 -o root -g wheel \
                /usr/local/sbin/pkg-static /sbin/pkg-static
        fi
    else
        if [ -e /usr/local/sbin/pkg-static ] && \
            ! diff /usr/local/sbin/pkg-static /sbin/pkg-static ; then
                install -C -m 755 -o root -g wheel \
                    /usr/local/sbin/pkg-static /sbin/pkg-static
        fi
    fi
}

pkg_initial_install() {
    if [ -e $HOME/local/pkglist ]; then
        PKGLIST="`cat $HOME/local/pkglist | grep -v '^#' | tr ' ' '\n' | sort -u | grep -v '^\$'`"
    elif [ -e $HOME/perm/pkglist ]; then
        PKGLIST="`cat $HOME/perm/pkglist | grep -v '^#' | tr ' ' '\n' | sort -u | grep -v '^\$'`"
    fi
    if [ -e ${FFMPEGPKG} ] || [ -e /boot/packages/ffmpeg-custom.txz ]; then
        tmppkglist="${PKGLIST}"
        PKGLIST="`echo ${tmppkglist} | sed 's;ffmpeg;;'`"
    fi
    if [ ! -e /boot/kernel/kernel ] || sysctl security.jail.jailed | grep 1 >/dev/null 2>&1; then
        ## we are going to omit beadm and iocage from installing in jails
        tmppkglist="${PKGLIST}"
        PKGLIST="`echo ${tmppkglist} | sed 's;beadm;;' | sed 's;ezjail;;' | sed 's;iocage;;' | sed 's;openntpd;;' | sed 's;ucarp;;' | sed 's;mDNSResponder_nss;;' | sed 's;mDNSResponder;;' | sed 's;iftop;;'`"
    fi
    if [ "update" = "$1" ] && [ -e /boot/../mfsroot ]; then
        if sysctl security.jail.jailed | grep 0 >/dev/null 2>&1; then
            if [ -d /boot/packages ]; then
                if [ -d /boot/packages_old ]; then
                    rm -r /boot/packages_old
                fi
                mv /boot/packages /boot/packages_old
            fi
            install -d -m 755 /boot/packages
            if [ -f /usr/local/etc/pkg.conf ]; then
                cat /usr/local/etc/pkg.conf >/usr/local/etc/pkg.conf.bkp
            fi
            install -d -m 755 /usr/local/etc
            cat /usr/local/etc/pkg.conf.bkp | grep -v "PKG_CACHEDIR" >/usr/local/etc/pkg.conf
            echo "PKG_CACHEDIR = \"${mnt}/boot/packages\";" >>/usr/local/etc/pkg.conf
            if [ "x" != "x$PKGLIST" ]; then
                pkg-static fetch -y $PKGLIST
            fi
            if [ -f /usr/local/etc/pkg.conf.bkp ]; then
                cat /usr/local/etc/pkg.conf.bkp >/usr/local/etc/pkg.conf
                rm /usr/local/etc/pkg.conf.bkp
            else
                rm /usr/local/etc/pkg.conf
            fi
            if [ -e ${LAMEPKG} ]; then
                cp ${LAMEPKG} /boot/packages/
            fi
            if [ -e ${LIBAACPLUSPKG} ]; then
                cp ${LIBAACPLUSPKG} /boot/packages/
            fi
            if [ -e ${FFMPEGPKG} ]; then
                rm /boot/packages/ffmpeg*
                cp ${FFMPEGPKG} /boot/packages/
                cp ${FFMPEGPKG} /boot/packages/ffmpeg-custom.txz
            fi
        fi
    else
        if [ "x" != "x$PKGLIST" ]; then
            for i in $PKGLIST ; do
                pkg-static install -y $i || exit 1
            done
            ### fails to install in pkg 1.7.1
            # pkg-static install -y $PKGLIST
        fi
        if hostname | grep squid >/dev/null ;then
            pkg-static remove -y openssl libressl
        else
            if [ -e /boot/../mfsroot ]; then
                forcepkg="-f"
            else
                unset forcepkg
            fi
            for i in ${LAMEPKG} ${LIBAACPLUSPKG} ${FFMPEGPKG} ; do
                if [ -e ${i} ]; then
                    pkg-static add ${forcepkg} ${i}
                fi
            done
        fi
    fi
}

add_users() {
    # do this no matter what
    if [ ! -d /usr/home/urep ]; then
        if cat /etc/passwd | grep urep >/dev/null 2>&1 ; then
            rmuser -yv urep
        fi
        ### Add urep user
        echo "urep:1001::::::/usr/home/urep:/bin/csh:" | adduser -w no -f -
    fi
    if [ -d /usr/home/urep ]; then
        chmod 700 /usr/home/urep
    fi
    # dont do it in jail
    if [ -e /boot/kernel/kernel ] && sysctl security.jail.jailed | grep 0 >/dev/null 2>&1; then
        if [ ! -d /usr/home/_sshtunl ]; then
            if cat /etc/passwd | grep _sshtunl >/dev/null 2>&1 ; then
                rmuser -yv _sshtunl
            fi
            ### Add _sshtunl user
            echo "_sshtunl:1022::::::/usr/home/_sshtunl:/usr/sbin/nologin:" | adduser -w no -f -
            ### Add btfs user
            #echo "btfs:1002::::::/usr/home/btfs:/bin/csh:" | adduser -w no -f -
            #pw groupmod operator -m btfs
        fi
    fi
}

pkg_quart() {
    if grep "latest" /etc/pkg/FreeBSD.conf >/dev/null 2>&1 ; then
        cp /etc/pkg/FreeBSD.conf /tmp/FreeBSD.conf
        cat /tmp/FreeBSD.conf \
            | sed 's;latest;quarterly;' \
            > /etc/pkg/FreeBSD.conf
    fi
}

pkg_latest() {
    if grep "quarterly" /etc/pkg/FreeBSD.conf >/dev/null 2>&1 ; then
        cp /etc/pkg/FreeBSD.conf /tmp/FreeBSD.conf
        cat /tmp/FreeBSD.conf \
            | sed 's;quarterly;latest;' \
            > /etc/pkg/FreeBSD.conf
    fi
}

pkg_install_git() {
    pkg-static update -f
    pkg-static install -y git
}

mkdirperm() {
    if [ ! -d ~/perm ]; then
        # are you root?
        if [ "0" = "${MYUID}" ]; then
            NEWDATASET=`zfs list | grep -o '^[[:alnum:]]*/root/bin' | sed 's/bin/perm/'`
            if [ "x" != "x${NEWDATASET}" ]; then
                zfs create -o exec=off -o setuid=off ${NEWDATASET}
            fi
        fi
        if [ ! -d ~/perm ]; then
            install -d -m 700 ~/perm
        fi
    fi
    if [ -d ~/perm ]; then
        chmod 700 ~/perm
    fi
}
mkdirlocal() {
    if [ ! -d ~/local ]; then
        # are you root?
        if [ "0" = "${MYUID}" ]; then
            NEWDATASET=`zfs list | grep -o '^[[:alnum:]]*/root/bin' | sed 's/bin/local/'`
            if [ "x" != "x${NEWDATASET}" ]; then
                zfs create -o exec=off -o setuid=off ${NEWDATASET}
            fi
        fi
        if [ ! -d ~/local ]; then
            install -d -m 700 ~/local
        fi
    fi
    if [ -d ~/local ]; then
        chmod 700 ~/local
    fi
}
mkdirgit() {
    if [ ! -d ~/git ]; then
        # are you root?
        if [ "0" = "${MYUID}" ]; then
            NEWDATASET=`zfs list | grep -o '^[[:alnum:]]*/root/bin' | sed 's/bin/git/'`
            if [ "x" != "x${NEWDATASET}" ]; then
                zfs create -o setuid=off ${NEWDATASET}
            fi
        fi
        if [ ! -d ~/git ]; then
            install -d -m 700 ~/git
        fi
    fi
    if [ -d ~/git ]; then
        chmod 700 ~/git
    fi
}

######################################################################
# Main
######################################################################

while getopts z:bh o; do
    case "$o" in
        b) UPDATEBOOKTPKG=1 ;;
    esac
done


install_ssh_auth_keys

mkdirperm

mkdirlocal

if [ "0" = "${MYUID}" ]; then
    install_resolv_overwrite
    install_hosts_overwrite
    install_hosts_append
    add_users
    test -e /etc/mail/aliases.db || newaliases
    pkg_latest
    pkg_bootstrap
    if ! which git > /dev/null ; then
        pkg_install_git
        if ! which git > /dev/null ; then
            pkg_quart
            pkg_install_git
        fi
    fi
    if ! which git > /dev/null ; then
        noproxy
        pkg_latest
        pkg_install_git
        if ! which git > /dev/null ; then
            pkg_quart
            pkg_install_git
        fi
    fi
    if ! which git > /dev/null ; then
        # Just quit
        echo "ERROR: git not found"
        exit 1
    fi
fi

mkdirgit

git_deploy skel

if [ ! -e ~/local/tmux.conf.status ]; then
    install -C -m 600 ~/git/skel/local/tmux.conf.status ~/local/tmux.conf.status
fi

if ls -A1 ~/git/skel/ | egrep -v '^\.git$' | grep '^\.' >/dev/null 2>&1 ; then
    for i in $(ls -A1 ~/git/skel/ | egrep -v '^\.git$' | grep '^\.') ; do
        install -C -m 600 ~/git/skel/${i} ${HOME}/
    done
    tar -c -f - -C ~/git/skel perm | tar -C ~/ -x -f -
    chmod 600 ~/perm/*
fi

if [ "0" = "${MYUID}" ]; then
    pkg_initial_install
    [ "$UPDATEBOOKTPKG" ] && pkg_initial_install update
REPOS="
apache-config-freebsd
btfs
ccasfs
crontabbed
delugefs
deploy
ffmpeg-tools
freebsd-install-script
freebsd-pf-script
freebsd-sortconf
freebsd-system-info
github-backup
gtfc
hddid
iocage-tools
md2html
md5sha256
mount_iso
netconn
newsyslog.conf.d
nginx-config-sites-enabled
pefs-tools
psnap
pwgen
rad
randomword
rsync-tools
setproxy
ssh-multi
ssh-tools
vmrc
zfs-tools
zsnapple
" # end of REPOS
# eza
# ori-tools
    for i in ${REPOS} ; do
        git_deploy ${i}
    done
fi


if [ "0" = "${MYUID}" ]; then
    # install /etc/rc.d/keygeli
    if [ -e /root/git/freebsd-install-script/etc/rc.d/keygeli ]; then
        install -C -m 755 /root/git/freebsd-install-script/etc/rc.d/keygeli /etc/rc.d/keygeli
    fi

    if [ -d /boot/packages_cache ] && [ -d /var/cache/pkg ]; then
        rm -r /var/cache/pkg
    fi
    # run always
    which newsyslog-conf-setup >/dev/null 2>&1 && newsyslog-conf-setup
    which periodic-config >/dev/null 2>&1 && periodic-config
    which syslog-config >/dev/null 2>&1 && syslog-config

    # test if not an iocage jail chroot
    if [ -e /boot/kernel/kernel ] && sysctl security.jail.jailed | grep 0 >/dev/null 2>&1; then
        which ioc-tankports >/dev/null 2>&1 && ioc-tankports
        which pf-table >/dev/null 2>&1 && pf-table save all >/dev/null 2>&1
        which pf-sshinvaliduserip

        # use update4.freebsd.org so we can cache with squid
        if [ -e /etc/freebsd-update.conf ]; then
            sed -i '' 's;update.FreeBSD.org;update4.freebsd.org;' /etc/freebsd-update.conf
        fi
        myrelease=$( uname -r | grep -o ".*RELEASE" )
        if [ -e /iocage/releases/${myrelease}/root/etc/freebsd-update.conf ]; then
            sed -i '' 's;update.FreeBSD.org;update4.freebsd.org;' /iocage/releases/${myrelease}/root/etc/freebsd-update.conf
        fi

    else
        # we are in a jail
        which nginx-config-sites-enabled >/dev/null 2>&1 && nginx-config-sites-enabled
    fi
fi

#########################################
### Remove stuff if exists
#########################################

removefiles="
/usr/local/bin/suspectip
/usr/local/bin/squidlog
/usr/local/bin/nginxlog
/usr/local/bin/nginx-cycle
/usr/local/bin/squid-cycle
/usr/local/bin/keypkg-auth
/usr/local/bin/keypkg-desktop
/usr/local/bin/keypkg-functions
/usr/local/bin/keypkg-migrate-pull
/usr/local/bin/keypkg-part1
/usr/local/bin/keypkg-part2
/usr/local/bin/keypkg-setup
/usr/local/bin/keypkg-shell
/usr/local/bin/deploy_keypkg
/usr/local/etc/deployjails.conf.d/080_keypkg
/usr/local/etc/deploypfucarp.conf.d/keypkg
/root/gitcluster/working/_jail-keypkg/usr/local/etc/deploypfucarp.conf.d/keypkg
/root/gitcluster/working/_jail-keypkg/usr/local/etc/deployjails.conf.d/080_keypkg
/usr/local/bin/deploy_skylable
/root/gitcluster/working/_jail-skylable/usr/local/etc/deployjails.conf.d/105_skylable
/usr/local/etc/deployjails.conf.d/105_skylable
/usr/local/bin/deploy_riak
/root/gitcluster/working/_jail-riak/usr/local/etc/deployjails.conf.d/110_riak
/usr/local/bin/deploy_letsencrypt
/usr/local/bin/dlna-link-mp3-to-music
/usr/local/bin/kgt
/usr/local/bin/zvg
/usr/local/bin/zvg-random-key
"

for i in $removefiles ; do
    if [ "x" != "x$i" ] && [ -e $i ]; then
        rm $i
    fi
done

pkg info gnupg1 >/dev/null 2>&1 && pkg remove -y gnupg1
pkg info openssl >/dev/null 2>&1 && pkg remove -y openssl
if [ "0" = "${MYUID}" ]; then
    # test if not an iocage jail chroot
    if [ -e /boot/kernel/kernel ] && sysctl security.jail.jailed | grep 0 >/dev/null 2>&1; then
        pkg info pcre >/dev/null 2>&1 && pkg remove -y pcre
        pkg info nginx >/dev/null 2>&1 && pkg remove -y nginx
    fi
fi

#########################################
### Alert of major changes
#########################################

if [ -e /etc/keypkg ]; then
    hostname=$( hostname -s )
    domainname=$( hostname -f | sed "s;$hostname\.;;" )
    cat <<EOF
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! keypkg has been renamed to keygeli !!!
To update:
    mv /etc/keypkg /etc/keygeli
    sed -i '' 's;keypkg;keygeli;g' /etc/keygeli/ssh_config
    mv /etc/rc.conf.d/keypkg /etc/rc.conf.d/keygeli
    sed -i '' 's;keypkg;keygeli;g' /etc/rc.conf.d/keygeli
    zpool import key
        zpool import -d /root/dev key
    mv /key/keypkg... /key/keygeli...
    rm /etc/rc.d/keypkg
EOF
    if [ -e /root/gitcluster/working/${domainname}/etc/keypkg ]; then
        cat <<EOF

    mv /root/gitcluster/working/${domainname}/etc/keypkg /root/gitcluster/working/${domainname}/etc/keygeli
    sed -i '' 's;keypkg;keygeli;g' /root/gitcluster/working/${domainname}/etc/keygeli/ssh_config
EOF
    fi
    if [ -e /root/gitcluster/working/${hostname}/etc/keypkg ]; then
        cat <<EOF

    mv /root/gitcluster/working/${hostname}/etc/keypkg /root/gitcluster/working/${hostname}/etc/keygeli
    sed -i '' 's;keypkg;keygeli;g' /root/gitcluster/working/${hostname}/etc/keygeli/ssh_config
EOF
    fi
    if [ -e /root/gitcluster/working/${hostname}/etc/rc.conf.d/keypkg ]; then
        cat <<EOF

    mv /root/gitcluster/working/${hostname}/etc/rc.conf.d/keypkg /root/gitcluster/working/${hostname}/etc/rc.conf.d/keygeli
    sed -i '' 's;keypkg;keygeli;g' /root/gitcluster/working/${hostname}/etc/rc.conf.d/keygeli
EOF
    fi
fi


#########################################
### run last because may disconnect
#########################################
if [ "0" = "${MYUID}" ]; then
    # test if not an iocage jail chroot
    if [ -e /boot/kernel/kernel ] && sysctl security.jail.jailed | grep 0 >/dev/null 2>&1; then
        which gdf >/dev/null 2>&1 && gdf
    fi
fi
